DROP TABLE IF EXISTS employee CASCADE;
DROP TABLE IF EXISTS sales CASCADE;

CREATE TABLE employee (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(100) NOT NULL
);

CREATE TABLE sales (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    price int,
    employee_id int REFERENCES employee(id) ON DELETE CASCADE
);

do $$
begin
for r in 1..5 loop
insert into employee(name) values(substr(md5(random()::text), 0, 8));
end loop;
end;
$$;

do $$
begin
for r in 1..3 loop
insert into sales(employee_id, price) values(1, random()*(1000-10)+10);
end loop;
end;
$$;

do $$
begin
for r in 1..5 loop
insert into sales(employee_id, price) values(2, random()*(1000-10)+10);
end loop;
end;
$$;

do $$
begin
for r in 1..8 loop
insert into sales(employee_id, price) values(3, random()*(1000-10)+10);
end loop;
end;
$$;

SELECT employee.id, employee.name, 
COUNT(sales.id) as sales_c,
rank() OVER (ORDER BY COUNT(sales.id) DESC) as sales_rank_c, 
coalesce(SUM(sales.price), 0) as sales_s,
rank() OVER (ORDER BY SUM(sales.price) DESC NULLS LAST) as sales_rank_s
FROM employee 
LEFT JOIN sales on employee.id=sales.employee_id 
GROUP BY employee.id ORDER BY employee.id;
